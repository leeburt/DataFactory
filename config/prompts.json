{
    "components_list_prompt": "Please analyze this circuit diagram and list the names of all electronic components in it. Your answer must be a JSON array, with each element being a component name string. For example: [\"resistor R1 \", \"capacitor C1 \", \"operational amplifier U1 \"]. Return ONLY the raw JSON array without any markdown formatting or additional text.",
    "component_io_prompt": "Please analyze the component '{{component_name}}' in the circuit diagram. Identify all input and output connections for this component. Your response must be a valid JSON object with the following structure:\n\n{\n  \"component\": \"{{component_name}}\",\n  \"inputs\": [\n    {\n      \"line\": \"Input 1\",\n      \"connected_to\": \"Component name it connects to\",\n      \"connection_point\": \"Specific point or pin where connection occurs\"\n    }\n  ],\n  \"outputs\": [\n    {\n      \"line\": \"Output 1\",\n      \"connected_to\": \"Component name it connects to\",\n      \"connection_point\": \"Specific point or pin where connection occurs\"\n    }\n  ]\n}\n\nPlease provide complete information for all inputs and outputs. Only return the raw JSON object with no additional text or markdown formatting.",
    "consistency_eval_prompt": "I have analysis results from two different models for the same circuit diagram. Please evaluate whether they are consistent with each other. You also have access to the original circuit diagram image which you should carefully examine to make a more accurate assessment.\n\nModel 1 Analysis:\n{{model1_json}}\n\nModel 2 Analysis:\n{{model2_json}}\n\nEvaluation steps:\n1. First, check if both models' component descriptions are in valid JSON format. Extract the component_details sections.\n2. If either model's output is not in proper JSON format, return {\"is_consistent\": false, \"reason\": \"One or both models did not output valid JSON format for component connections\"}\n3. If both are in JSON format, examine the original circuit diagram image to identify the actual components and connections.\n4. Compare each model's analysis with what you can observe in the image, paying special attention to:\n   - Whether all components in the image are correctly identified by both models\n   - Whether the connection relationships described match what you see in the image\n   - Whether the functional descriptions are accurate based on the circuit design\n5. Consider the analyses consistent if they both correctly identify the same components and accurately describe the connections as shown in the image, even if there are minor differences in naming or descriptions.\n\nPlease provide your evaluation as a JSON object with the following structure:\n{\"is_consistent\": true/false, \"reason\": \"Detailed explanation of your reasoning, pointing out specific areas of consistency or inconsistency and how they relate to what you observe in the actual circuit image\"}\n\nReturn ONLY the raw JSON without any markdown formatting.",
    "component_matching_prompt": "I need to match components identified by two different models in the same circuit diagram. Even though the names might be different, I need to determine which components from each model refer to the same actual component in the circuit.\n\nModel 1 Components: {{model1_components}}\n\nModel 2 Components: {{model2_components}}\n\nUsing your knowledge of electronics and component naming conventions, please match components that are likely referring to the same physical component. Consider characteristics like component type (resistor, capacitor, etc.) and identifiers (R1, C2, etc.).\n\nReturn your analysis as a JSON array of matches, where each match is an object containing the paired components. Your response should be ONLY raw JSON with no markdown code blocks or additional text. The format should be as follows:\n\n[\n  {\n    \"model1_component\": \"Component name from model 1\",\n    \"model2_component\": \"Corresponding component name from model 2\",\n    \"confidence\": \"high|medium|low\",\n    \"reasoning\": \"Brief explanation of why these components match\"\n  },\n  ...\n]\n\nIf a component from either model has no match in the other model, include it with a null match value:\n\n{\n  \"model1_component\": \"Unmatched component from model 1\",\n  \"model2_component\": null,\n  \"confidence\": \"high\",\n  \"reasoning\": \"Component only identified by Model 1\"\n}\n\nor\n\n{\n  \"model1_component\": null,\n  \"model2_component\": \"Unmatched component from model 2\",\n  \"confidence\": \"high\",\n  \"reasoning\": \"Component only identified by Model 2\"\n}\n\nREMEMBER: Your response should be ONLY the raw JSON array with no explanation, introduction or code block formatting.",
    "component_consistency_prompt": "I have analysis results for the same component from two different models. Please evaluate whether their descriptions of the connections and functionality are consistent.\n\nComponent from Model 1: \"{{component1_name}}\"\nModel 1 Analysis: {{component1_details}}\n\nMatched Component from Model 2: \"{{component2_name}}\"\nModel 2 Analysis: {{component2_details}}\n\nYou also have access to the original circuit diagram image to make a more accurate assessment.\n\nPlease evaluate the consistency of these component analyses by comparing:\n1. The number and type of inputs/outputs described\n2. The connections to other components\n3. The described functionality of each connection\n4. The overall role of the component in the circuit\n\nProvide your evaluation as a JSON object with this structure. Your response should be ONLY raw JSON without any markdown formatting or additional text:\n\n{\n  \"component_pair\": \"{{component1_name}} (Model 1) & {{component2_name}} (Model 2)\",\n  \"is_consistent\": true/false,\n  \"consistency_score\": 0-100,\n  \"inconsistencies\": [\n    \"Description of inconsistency 1\",\n    \"Description of inconsistency 2\"\n  ],\n  \"reasoning\": \"Detailed explanation of your overall consistency assessment\"\n}\n\nIf there are no inconsistencies, provide an empty array for the \"inconsistencies\" field. Remember to only return the raw JSON object without any code block formatting."
}